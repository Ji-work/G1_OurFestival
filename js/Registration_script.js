// script.js (‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö registration.html)

document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('registrationForm');
    const submitBtn = document.getElementById('submitBtn');
    
    // Form Controls (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ID ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö HTML)
    const fullname = document.getElementById('fullname'); // ID ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    const email = document.getElementById('email');       // ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° ID ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô HTML
    const phone = document.getElementById('phone');
    const participantType = document.getElementById('participantType');
    const date = document.getElementById('date');
    const occupation = document.getElementById('occupation'); // Field ‡πÉ‡∏´‡∏°‡πà
    const agreeCheck = document.getElementById('agreeCheck');
    
    // Error Elements
    const errorFullname = document.getElementById('errorFullName'); // HTML ‡πÉ‡∏ä‡πâ errorFullName (‡∏ï‡∏±‡∏ß F ‡πÉ‡∏´‡∏ç‡πà)
    const errorEmail = document.getElementById('errorEmail');
    const errorPhone = document.getElementById('errorPhone');
    const errorParticipantType = document.getElementById('errorParticipantType');
    const errorDate = document.getElementById('errorDate');
    const errorOccupation = document.getElementById('errorOccupation'); // Field ‡πÉ‡∏´‡∏°‡πà
    const errorAgree = document.getElementById('errorAgree');
    
    /**
     * b.i. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ (Input Data Validation)
     */
    
    function displayError(inputElement, errorElement, isValid, message = '') {
        if (isValid) {
            inputElement.classList.remove('is-invalid');
            if (errorElement) errorElement.style.display = 'none'; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö errorElement
        } else {
            inputElement.classList.add('is-invalid');
            if (errorElement) {
                errorElement.textContent = message || errorElement.textContent;
                errorElement.style.display = 'block';
            }
        }
    }

    function validateFullname() {
        const value = fullname.value.trim();
        const isValid = value.length >= 5;
        displayError(fullname, errorFullname, isValid, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 5 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£");
        return isValid;
    }

    function validateEmail() {
        const value = email.value.trim();
        const regex = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/;
        const isValid = regex.test(value);
        displayError(email, errorEmail, isValid);
        return isValid;
    }

    function validatePhone() {
        const value = phone.value.trim();
        const regex = /^\d{9,10}$/; 
        const isValid = regex.test(value);
        displayError(phone, errorPhone, isValid);
        return isValid;
    }

    function validateParticipantType() {
        const isValid = participantType.value !== "";
        displayError(participantType, errorParticipantType, isValid);
        return isValid;
    }
    
    function validateOccupation() {
        const isValid = occupation.value !== "";
        displayError(occupation, errorOccupation, isValid, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏ä‡∏µ‡∏û");
        return isValid;
    }

    function validateDate() {
        const value = date.value.trim();
        const currentDate = new Date().toISOString().split('T')[0];
        const isValid = value !== "" && value >= currentDate;
        displayError(date, errorDate, isValid, isValid ? '' : '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï');
        return isValid;
    }

    function validateAgreement() {
        const isValid = agreeCheck.checked;
        if (!isValid) {
            errorAgree.style.display = 'block';
        } else {
            errorAgree.style.display = 'none';
        }
        return isValid;
    }

    function runAllValidation() {
        const results = [
            validateFullname(),
            validateEmail(),
            validatePhone(),
            validateParticipantType(),
            validateOccupation(), // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
            validateDate(),
            validateAgreement()
        ];
        return results.every(res => res === true); 
    }

    // -------------------------------------------------------------
    
    /**
     * b. Event Handling ‡πÅ‡∏•‡∏∞ C. Submit Logic
     */

    form.addEventListener('submit', function(event) {
        event.preventDefault(); 
        
        if (runAllValidation()) {
            const interests = Array.from(document.querySelectorAll('input[name="interests"]:checked'))
                .map(cb => cb.value);

            const formData = {
                fullname: fullname.value.trim(),
                email: email.value.trim(),
                phone: phone.value.trim(),
                participantType: participantType.value,
                occupation: occupation.value,
                date: date.value,
                interests: interests.join(', '),
                timestamp: new Date().toLocaleString('th-TH')
            };

            // c. ‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ
            saveRegistration(formData);
            
            // ‡∏ô‡∏≥‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ (summary.html)
            window.location.href = 'summary.html';
        } else {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Error ‡∏™‡∏µ‡πÅ‡∏î‡∏á');
        }
    });
    
    // Event: Blur/Change ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    fullname.addEventListener('blur', validateFullname);
    email.addEventListener('blur', validateEmail);
    phone.addEventListener('blur', validatePhone);
    date.addEventListener('blur', validateDate);
    participantType.addEventListener('change', validateParticipantType);
    occupation.addEventListener('change', validateOccupation); // Event ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Field ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
    agreeCheck.addEventListener('change', validateAgreement);
    
    /**
     * b.ii. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡πÄ‡∏•‡πà‡∏ô
     */

    // ‡∏•‡∏π‡∏Å‡πÄ‡∏•‡πà‡∏ô: ‡∏õ‡∏∏‡πà‡∏° Submit ‡∏°‡∏µ‡πÅ‡∏™‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡∏£‡∏≠‡∏á (Glow effect) ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Mouse ‡πÄ‡∏Ç‡πâ‡∏≤/‡∏≠‡∏≠‡∏Å
    submitBtn.addEventListener('mouseenter', () => {
        submitBtn.classList.add('btn-submit-glow');
    });

    submitBtn.addEventListener('mouseleave', () => {
        submitBtn.classList.remove('btn-submit-glow');
    });

    // ‡∏•‡∏π‡∏Å‡πÄ‡∏•‡πà‡∏ô: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö Focus
    const formControls = document.querySelectorAll('.form-control, .form-select');
    formControls.forEach(control => {
        control.addEventListener('focus', () => {
            control.style.backgroundColor = '#f8f9fa';
            control.style.transition = 'background-color 0.3s';
        });
        control.addEventListener('blur', () => {
            control.style.backgroundColor = '#ffffff'; 
        });
    });

    // c. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function saveRegistration(data) {
    console.log('--- RUNNING SAVE REGISTRATION ---'); // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏° Log 1
    
    // 1. ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°
    const existingData = localStorage.getItem('fairVisitors');
    console.log('Existing Data:', existingData); // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏° Log 2: ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á
    
    // 2. ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    let visitors = existingData ? JSON.parse(existingData) : [];
    
    // 3. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    visitors.push(data);
    
    // 4. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô Local Storage
    localStorage.setItem('fairVisitors', JSON.stringify(visitors));
    
    console.log('New Data Saved Successfully. Total visitors:', visitors.length); // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏° Log 3
}
});